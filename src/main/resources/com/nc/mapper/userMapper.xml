<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nc.mapper.UserMapper">

    <resultMap id="UserMap" type="user">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="address" property="address"/>
        <result column="favorites" property="favorites"/>
    </resultMap>

    <sql id="User_Column">
        id, username, address
    </sql>

    <select id="queryUserById" resultType="com.nc.model.User">
        select * from user where id = ${id}
    </select>

    <insert id="addUser" parameterType="com.nc.model.User">
        insert into user(username, address) values(#{username}, #{address})
    </insert>

    <insert id="addUser2" parameterType="com.nc.model.User">
        <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE">
          select uuid();
        </selectKey>
        insert into user(id,username,address) values (#{id},#{username},#{address})
    </insert>

    <insert id="addUser3" parameterType="user">
        <selectKey resultType="string" keyProperty="id" order="BEFORE">
            select uuid();
        </selectKey>
        insert into user(id,username,address,favorites) values (#{id},#{username},#{address},#{favorites,typeHandler=com.nc.typehandler.List2VarcharHandler})
    </insert>

    <delete id="deleteUserById" parameterType="java.lang.String">
        delete from user where id = #{id}
    </delete>

    <update id="updateUserById" parameterType="user">
        update user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="address != null">
                address = #{address},
            </if>
            <if test="favorites != null">
                favorites = #{favorites},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateUserById1" parameterType="string">
        <!--update user set username = #{arg1} where id = #{arg0}-->
        update user set username = #{param2} where id = #{param1}
    </update>

    <select id="queryUser" resultMap="UserMap">
        select * from user
    </select>

    <select id="queryUserByName" resultType="user">
        <!--select * from user where username like '%${name}%'-->
        select * from user where username like concat('%', #{username}, '%')
    </select>

    <select id="queryAllUser" resultType="user">
        select * from user order by #{orderBy}
    </select>

    <select id="queryUserByPage" resultMap="UserMap">
        select * from user
        <if test="start != null and count != null">
            limit #{start} , #{count}
        </if>
    </select>

    <select id="queryUserByUsernameAndId" resultMap="UserMap">
        select * from user
        <where>
            <if test="username!= null">
                and username like concat('%',#{username},'%')
            </if>
            <if test="id != null">
                and id > #{id}
            </if>
        </where>
    </select>

    <select id="queryUserByIds" resultType="user">
        select <include refid="User_Column"/> from user where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
</mapper>
